package Controller;

import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;

import java.net.URL;
import java.util.ResourceBundle;

import Class.Etudiant;
import Connection.ConnectionMySQL;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;

import javafx.scene.control.TableView;

import javafx.scene.control.ChoiceBox;
import javafx.scene.control.ComboBox;
import javafx.scene.control.TableColumn;

public class ListeEtudiantController implements Initializable {
	@FXML
	private TableView<Etudiant> table;
	@FXML
	private TableColumn<Etudiant, Integer> id;
	@FXML
	private TableColumn<Etudiant, String > nom;
	@FXML
	private TableColumn<Etudiant, String> prenom;
	@FXML
	private TableColumn<Etudiant, Float> tp;
	@FXML
	private TableColumn<Etudiant, Float> cc;
	@FXML
	private TableColumn<Etudiant, Float> exam;
	@FXML
	private ComboBox matiere;

	
	// Event Listener on Button.onAction
	@FXML
	public void chercher(ActionEvent event) {
		// TODO Autogenerated
		table.getItems().clear();
		ConnectionMySQL x= new ConnectionMySQL();
		ObservableList<Etudiant> y = x.listeEtudiant1(matiere.getValue().toString());
		table.setItems(y);
	}
	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
			// TODO Auto-generated method stub
			ConnectionMySQL x = new ConnectionMySQL();
			try {
				matiere.getItems().addAll(x.matChoiceBox());
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		table.getItems().clear();
		id. setCellValueFactory(new PropertyValueFactory<Etudiant, Integer>("id"));
		nom.setCellValueFactory(new PropertyValueFactory<Etudiant, String >("nom"));
		prenom.setCellValueFactory(new PropertyValueFactory<Etudiant, String>("prenom"));
		tp.setCellValueFactory(new PropertyValueFactory<Etudiant, Float>("tp"));
		cc.setCellValueFactory(new PropertyValueFactory<Etudiant, Float>("cc"));
		exam.setCellValueFactory(new PropertyValueFactory<Etudiant, Float>("examen"));
		
	}
}